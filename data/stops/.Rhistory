library(tidyverse)
#load csv
vot <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/data/stops/VOT_results.csv", locale = locale(encoding = "UTF-16"))
#convert VOT to s
vot <- vot%>%
mutate(VOT = VOT *1000)
#create segment column
vot <- vot %>%
mutate(segment = substr(Word, 1, 1))
#create emphasis column
vot <- vot %>%
mutate(emphasis = ifelse(segment %in% c("B", "D", "G", "J", "K", "P", "Q" ,"T"), "emphatic", "plain"))
#create means df
means <- vot %>%
group_by(segment, emphasis) %>%
summarise(mean_vot = mean(VOT, na.rm = TRUE),
count = n(),
sd = sd(VOT),
se = sd/sqrt(count))
#plot vot for voiced
means %>%
filter(segment %in% c("b", "B", "d", "D", "g", "G")) %>%
mutate(segment = tolower(segment)) %>%
ggplot(aes(x = segment, y = mean_vot, color = emphasis, fill = emphasis)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(x = segment, ymin=mean_vot-se, ymax=mean_vot+se), stat = "identity",
position = "dodge") +
ylab("Mean VOT (s)") +
ggtitle("VOT(s) for Voiced Stops")
#plot VOT for voiceless
means %>%
filter(segment %in% c("t", "T", "q", "Q", "k", "K", "p", "P")) %>%
mutate(segment = tolower(segment),
segment = factor(segment, levels = c("p", "t", "k", "q")) ) %>%
ggplot(aes(x = segment, y = mean_vot, color = emphasis, fill = emphasis)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(x = segment, ymin=mean_vot-se, ymax=mean_vot+se), stat = "identity",
position = "dodge") +
ylab("Mean VOT (s)") +
ggtitle("VOT(s) for Voiceless Stops")
#plot vot for voiced
means %>%
filter(segment %in% c("b", "B", "d", "D", "g", "G")) %>%
mutate(segment = tolower(segment)) %>%
ggplot(aes(x = segment, y = mean_vot, color = emphasis, fill = emphasis)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(x = segment, ymin=mean_vot-se, ymax=mean_vot+se), stat = "identity",
position = "dodge") +
ylab("Mean VOT (s)") +
ggtitle("VOT(s) for Voiced Stops")
#plot VOT for voiceless
means %>%
filter(segment %in% c("t", "T", "q", "Q", "k", "K", "p", "P")) %>%
mutate(segment = tolower(segment),
segment = factor(segment, levels = c("p", "t", "k", "q")) ) %>%
ggplot(aes(x = segment, y = mean_vot, color = emphasis, fill = emphasis)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(x = segment, ymin=mean_vot-se, ymax=mean_vot+se), stat = "identity",
position = "dodge") +
ylab("Mean VOT (s)") +
ggtitle("VOT(s) for Voiceless Stops")
#plot vot for voiced
means %>%
filter(segment %in% c("b", "B", "d", "D", "g", "G")) %>%
mutate(segment = tolower(segment)) %>%
ggplot(aes(x = segment, y = mean_vot, color = emphasis, fill = emphasis)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(x = segment, ymin=mean_vot-se, ymax=mean_vot+se), stat = "identity",
position = "dodge") +
ylab("Mean VOT (s)") +
ggtitle("VOT(s) for Voiced Stops")
#plot VOT for voiceless
means %>%
filter(segment %in% c("t", "T", "q", "Q", "k", "K", "p", "P")) %>%
mutate(segment = tolower(segment),
segment = factor(segment, levels = c("p", "t", "k", "q")) ) %>%
ggplot(aes(x = segment, y = mean_vot, color = emphasis, fill = emphasis)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(x = segment, ymin=mean_vot-se, ymax=mean_vot+se), stat = "identity",
position = "dodge") +
ylab("Mean VOT (s)") +
ggtitle("VOT(s) for Voiceless Stops")
library(tidyverse)
#import csv
vowels <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/data/vowels/results.csv")
#check to see all of the unique segment names
unique(vowels$Segment)
# Add "11" to tokens in "Segment" that don't contain any numbers
# vowels$Segment <- ifelse(!grepl("[0-9]", vowels$Segment),
#                          paste0(vowels$Segment, "11"),
#                          vowels$Segment)
#create new vowel column
vowels <- vowels %>%
mutate(vowel = substr(Segment, 1, 1))
#create emphatic column
vowels <- vowels %>%
mutate(emphasis = case_when(
grepl("22", Segment) ~ "emphatic",
grepl("13$", Segment) ~ "mixed",
grepl("33", Segment) ~ "mixed",
TRUE ~ "plain"
))
#filter out dipthongs
vowels <- vowels %>%
filter(!grepl("j", vowel))
#add syllable status column
vowels <- vowels %>%
mutate(syllable_status = case_when(
grepl("13$", Segment) ~ "plain_mixed",
grepl("33$", Segment) ~ "mixed",
grepl("22$", Segment) ~ "emphatic",
grepl("11$", Segment) ~ "plain",
TRUE ~ NA_character_  # For cases that don't match any condition
))
###plots###
#filter out epenthetic vowel
vowel_no_epenthesis <- vowels %>%
filter(!vowel %in% c("ē", "ū"))
#####vowel plot with plain vs. emphatic#####
vowels_nm <- vowel_no_epenthesis %>%
filter(emphasis != "mixed")
vowels_nm_means <- vowels_nm %>%
group_by(vowel, emphasis) %>%
summarise(mean_f1 = mean(F1),
mean_f2 = mean(F2))
ggplot(vowels_nm, aes(x = F2, y = F1, color = emphasis, label = vowel)) +
# Vowel symbols as points with increased transparency
geom_text(aes(label = vowel), alpha = 0.3, size = 4) +  # Use vowel symbols instead of points
# Mean labels
geom_label(data = vowels_nm_means,
aes(x = mean_f2, y = mean_f1, label = vowel, color = emphasis),
size = 5,
fill = "white",  # White background for labels
fontface = "bold") +
scale_x_reverse() +
scale_y_reverse() +
scale_color_manual(values = c("plain" = "blue", "emphatic" = "red")) +
stat_ellipse(aes(group = Segment), alpha = 0.3) +  # Lighter ellipses
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
coord_fixed(ratio = 10/6)

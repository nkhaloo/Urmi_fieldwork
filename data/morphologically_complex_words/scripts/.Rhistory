# Load necessary packages
library(dplyr)
library(readr)
library(tidyverse)
# Read the CSV file
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/speaker_1/morphologically_complex_words/results.csv")
print(results_df)
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/speaker_1/morphologically_complex_words/results.csv")
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/speaker_1/morphologically_complex_words/mc_results_s1.csv")
# Read the CSV file
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/data/morphologically_complex_wordsmc_results_s1.csv")
# Read the CSV file
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/data/morphologically_complex_wordsmc_results_s1.csv")
# Read the CSV file
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/data/morphologically_complex_words/mc_results_s1.csv")
# Remove the Filename column and create new columns based on the conditions
results_df <- results_df %>%
select(-Filename) %>% # Remove the Filename column
mutate(
word_status = case_when(
substr(Segment, 2, 3) == "11" ~ "plain",
substr(Segment, 2, 3) == "22" ~ "emphatic",
substr(Segment, 2, 3) == "13" ~ "mixed",
substr(Segment, 2, 3) == "33" ~ "mixed",
TRUE ~ NA_character_ # Default case
),
syllable_status = case_when(
substr(Segment, 2, 3) == "11" ~ "plain",
substr(Segment, 2, 3) == "22" ~ "emphatic",
substr(Segment, 2, 3) == "13" ~ "plain",
substr(Segment, 2, 3) == "33" ~ "mixed",
TRUE ~ NA_character_ # Default case
),
morph = case_when(
endsWith(Segment, "r") ~ "root",
endsWith(Segment, "s") ~ "suffix",
endsWith(Segment, "p") ~ "prefix",
TRUE ~ NA_character_ # Default case
)
) %>%
# Replace NaN values with "mixed"
mutate(
word_status = ifelse(is.na(word_status), "mixed", word_status),
syllable_status = ifelse(is.na(syllable_status), "mixed", syllable_status),
morph = ifelse(is.na(morph), "mixed", morph)
) %>%
# Replace specified vowels in the Segment column
mutate(Segment = gsub("e", "ɛ", Segment),
Segment = gsub("ej", "ɛj", Segment),
Segment = gsub("o", "ø", Segment),
Segment = gsub("u", "ʉ", Segment))
results_df
results_df <- results_df %>%
mutate(
vowel = str_sub(Segment, 1, 1)  # Extracts just the first character
)
results_df
vowel_means <- results_df %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1),
mean_F2 = mean(F2))
#vowel chart
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1)) +
scale_x_reverse() + scale_y_reverse() +
scale_color_discrete(breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "none") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)")
view(results_df)
view(results_df)
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = vowel)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
facet_wrap(~ vowel, scales = "free")
vowel_means <- results_df %>%
group_by(vowel, morph, word_status, syllable_status) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = vowel)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
facet_wrap(~ vowel, scales = "free")
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
facet_wrap(~ vowel, scales = "free")
vowel_means <- results_df %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
facet_wrap(~ vowel, scales = "free")
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
facet_wrap(~ Segment, scales = "free")
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
facet_wrap(~ Segment, scales = "free")
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/data/morphologically_complex_words/mc_results_s1.csv")
# Remove the Filename column and create new columns based on the conditions
results_df <- results_df %>%
mutate(
word_status = case_when(
substr(Segment, 2, 3) == "11" ~ "plain",
substr(Segment, 2, 3) == "22" ~ "emphatic",
substr(Segment, 2, 3) == "13" ~ "mixed",
substr(Segment, 2, 3) == "33" ~ "mixed",
TRUE ~ NA_character_ # Default case
),
syllable_status = case_when(
substr(Segment, 2, 3) == "11" ~ "plain",
substr(Segment, 2, 3) == "22" ~ "emphatic",
substr(Segment, 2, 3) == "13" ~ "plain",
substr(Segment, 2, 3) == "33" ~ "mixed",
TRUE ~ NA_character_ # Default case
),
morph = case_when(
endsWith(Segment, "r") ~ "root",
endsWith(Segment, "s") ~ "suffix",
endsWith(Segment, "p") ~ "prefix",
TRUE ~ NA_character_ # Default case
)
) %>%
# Replace NaN values with "mixed"
mutate(
word_status = ifelse(is.na(word_status), "mixed", word_status),
syllable_status = ifelse(is.na(syllable_status), "mixed", syllable_status),
morph = ifelse(is.na(morph), "mixed", morph)
) %>%
# Replace specified vowels in the Segment column
mutate(Segment = gsub("e", "ɛ", Segment),
Segment = gsub("ej", "ɛj", Segment),
Segment = gsub("o", "ø", Segment),
Segment = gsub("u", "ʉ", Segment))
# Add a new column "vowel" based on the first character of each string in "Segment"
results_df <- results_df %>%
mutate(
vowel = str_sub(Segment, 1, 1)  # Extracts just the first character
)
results_df
results_df
results_df
results_df
view(results_df)
# Save the modified DataFrame to a new CSV file
write.csv(results_df, "/Users/ritalavi/Desktop/Urmi_fieldwork/data/morphologically_complex_words/edited_results.csv", row.names = FALSE)
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1)) +
scale_x_reverse() + scale_y_reverse() +
scale_color_discrete(breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "none") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)")
results_df %>% filter(vowel = a)
results_df %>% filter(vowel == a)
results_df %>% filter(vowel == "a")
vowel_means
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
results_df
# Load necessary packages
library(dplyr)
library(readr)
library(tidyverse)
# Read the CSV file
results_df <- read_csv("/Users/ritalavi/Desktop/Urmi_fieldwork/data/morphologically_complex_words/mc_results_s1.csv")
# Remove the Filename column and create new columns based on the conditions
results_df <- results_df %>%
mutate(
word_status = case_when(
substr(Segment, 2, 3) == "11" ~ "plain",
substr(Segment, 2, 3) == "22" ~ "emphatic",
substr(Segment, 2, 3) == "13" ~ "mixed",
substr(Segment, 2, 3) == "33" ~ "mixed",
TRUE ~ NA_character_ # Default case
),
syllable_status = case_when(
substr(Segment, 2, 3) == "11" ~ "plain",
substr(Segment, 2, 3) == "22" ~ "emphatic",
substr(Segment, 2, 3) == "13" ~ "plain",
substr(Segment, 2, 3) == "33" ~ "mixed",
TRUE ~ NA_character_ # Default case
),
morph = case_when(
endsWith(Segment, "r") ~ "root",
endsWith(Segment, "s") ~ "suffix",
endsWith(Segment, "p") ~ "prefix",
TRUE ~ NA_character_ # Default case
)
) %>%
# Replace NaN values with "mixed"
mutate(
word_status = ifelse(is.na(word_status), "mixed", word_status),
syllable_status = ifelse(is.na(syllable_status), "mixed", syllable_status),
morph = ifelse(is.na(morph), "mixed", morph)
) %>%
# Replace specified vowels in the Segment column
mutate(Segment = gsub("e", "ɛ", Segment),
Segment = gsub("ej", "ɛj", Segment),
Segment = gsub("o", "ø", Segment),
Segment = gsub("u", "ʉ", Segment))
# Add a new column "vowel" based on the first character of each string in "Segment"
results_df <- results_df %>%
mutate(
vowel = str_sub(Segment, 1, 1)  # Extracts just the first character
)
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
results_df
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'a') %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
vowel_means
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'æ') %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
vowel_means
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") +
facet_wrap(~ Segment, scales = "free")
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'a') %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'ø') %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
vowel_means
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'ʉ') %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'æ') %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'æ'| word_status == c("plain", "emphatic")) %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'æ'& word_status == c("plain", "emphatic")) %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
vowel_means
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'æ') %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
vowel_means
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
esults_df
results_df
# Calculate mean F1 and F2 for each Segment and morph
vowel_means <- results_df %>%
filter(vowel == 'æ' & morph == "prefix") %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart: separate plots for each vowel
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
# Vowel chart: separate plots for each vowel
æ_prefix <- ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
æ_prefix
# Vowel chart:
æ_prefix <- results_df %>%
filter(vowel == 'æ' & morph == "prefix") %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop') %>%
ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = vowel_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
æ_prefix
æ_suffix_means <- results_df %>%
filter(vowel == 'æ' & morph == "suffix") %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart:
æ_prefix <- ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = æ_prefix_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
æ_prefix_means <- results_df %>%
filter(vowel == 'æ' & morph == "prefix") %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
æ_suffix_means <- results_df %>%
filter(vowel == 'æ' & morph == "suffix") %>%
group_by(Segment, morph) %>%
summarise(mean_F1 = mean(F1, na.rm = TRUE),
mean_F2 = mean(F2, na.rm = TRUE),
.groups = 'drop')
# Vowel chart:
æ_prefix <- ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = æ_prefix_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)") #+
æ_suffix <- ggplot(results_df, aes(x = F2, y = F1, color = morph, label = Segment)) +
geom_label(data = æ_suffix_means, aes(x = mean_F2, y = mean_F1), show.legend = FALSE) +
scale_x_reverse() +
scale_y_reverse() +
#scale_color_discrete(name = "Morph", breaks = c("a", "æ", "ɛ", "i", "ʉ", "ø")) +
theme_classic() +
theme(legend.position = "right") +
xlab("Mean F2 (Hz)") +
ylab("Mean F1 (Hz)")
æ_suffix
æ_prefix
view(results_df)
æ_suffix
